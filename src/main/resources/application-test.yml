server:
  port: 8080
  servlet:
    context-path: /cas
  undertow:
    threads:
      worker: 1000
spring:
  datasource:
    druid:
      stat-view-servlet:
        loginUsername: admin
        loginPassword: 123456
    dynamic:
      druid: # 全局druid参数，绝大部分值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
        # 连接池的配置信息
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      datasource:
        master:
          url: ${DB_URL:jdbc:mysql://localhost:3306/cloud?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true}
          username: ${DB_USERNAME:root}
          password: ${DB_PASSWD:root}
          driver-class-name: ${DB_DRIVER:com.mysql.cj.jdbc.Driver}
  #redis 配置
  redis:
    database: 0
    host: ${REDIS_HOST:localhost}
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWD:redis}

cas:
  admin-ids:
    - e9ca23d68d884d4ebb19d07889727dae
  tgt:
    max-time-to-live-in-seconds: 7200 #服务端TGT存储时间,决定浏览器cookies中的TGT有效时间,有效期间同意浏览器客户端向cas获取ticket不需要登录
  st:
    time-to-kill-in-seconds: 20 # ticket存活时间，客户端需要在这个时间内兑换登录信息
